---
name: Container

on:  # yamllint disable-line rule:truthy
  - push

env:
  # TODO: switch to GCP artifact registry
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.id }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE}}
          flavor: latest=auto
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          build-args: |
            JOBS=2
          target: production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Construct unique reference to built image
        id: image
        run: |
          repository="$(echo $IMAGE | tr '[:upper:]' '[:lower:]')"
          echo "id=$repository@${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker pull ${{ needs.build.outputs.image}}

      - name: Run nginx -t
        # DNS resolution for internal services is stubbed with localhost
        run: |
          docker run --rm \
            --env-file .env.example \
            --add-host events:127.0.0.1 \
            --add-host identity:127.0.0.1 \
            --add-host router:127.0.0.1 \
            ${{ needs.build.outputs.image}} \
            nginx -t
